
R version 3.5.0 (2018-04-23) -- "Joy in Playing"
Copyright (C) 2018 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin15.6.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "Wrench"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> library('Wrench')
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("wrench")
> ### * wrench
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: wrench
> ### Title: Normalization for sparse, under-sampled count data.
> ### Aliases: wrench
> 
> ### ** Examples
> 
> #Obtain counts matrix and some group information
> require(metagenomeSeq)
Loading required package: metagenomeSeq
Loading required package: Biobase
Loading required package: BiocGenerics
Loading required package: parallel

Attaching package: ‘BiocGenerics’

The following objects are masked from ‘package:parallel’:

    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ,
    clusterExport, clusterMap, parApply, parCapply, parLapply,
    parLapplyLB, parRapply, parSapply, parSapplyLB

The following objects are masked from ‘package:stats’:

    IQR, mad, sd, var, xtabs

The following objects are masked from ‘package:base’:

    Filter, Find, Map, Position, Reduce, anyDuplicated, append,
    as.data.frame, basename, cbind, colMeans, colSums, colnames,
    dirname, do.call, duplicated, eval, evalq, get, grep, grepl,
    intersect, is.unsorted, lapply, lengths, mapply, match, mget,
    order, paste, pmax, pmax.int, pmin, pmin.int, rank, rbind,
    rowMeans, rowSums, rownames, sapply, setdiff, sort, table, tapply,
    union, unique, unsplit, which, which.max, which.min

Welcome to Bioconductor

    Vignettes contain introductory material; view with
    'browseVignettes()'. To cite Bioconductor, see
    'citation("Biobase")', and for packages 'citation("pkgname")'.

Loading required package: limma

Attaching package: ‘limma’

The following object is masked from ‘package:BiocGenerics’:

    plotMA

Loading required package: glmnet
Loading required package: Matrix
Loading required package: foreach
Loaded glmnet 2.0-16

Loading required package: RColorBrewer
> data(mouseData)
> cntsMatrix <- MRcounts(mouseData)
> group <- pData(mouseData)$diet
> #Running wrench with defaults
> W <- wrench( cntsMatrix, condition=group  )
Loading required package: matrixStats

Attaching package: ‘matrixStats’

The following objects are masked from ‘package:Biobase’:

    anyMissing, rowMedians

Warning: glm.fit: algorithm did not converge
Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred
Warning: glm.fit: algorithm did not converge
Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred
Loading required package: locfit
locfit 1.5-9.1 	 2013-03-22
Warning: Partial NA coefficients for 8430 probe(s)
> compositionalFactors <- W$ccf
> normalizationFactors <- W$nf
> 
> #Introducing the above normalization factors for the most
> # commonly used tools is shown below.
> 
> #If using edgeR, we must pass in the compositional factors
> require(edgeR)
Loading required package: edgeR

Attaching package: ‘edgeR’

The following object is masked from ‘package:metagenomeSeq’:

    calcNormFactors

> edgerobj <- DGEList( counts=cntsMatrix,
+                      group = as.matrix(group),
+                      norm.factors=compositionalFactors )
> 
> #If using DESeq/DESeq2
> require(DESeq2)
Loading required package: DESeq2
Loading required package: S4Vectors
Loading required package: stats4

Attaching package: ‘S4Vectors’

The following object is masked from ‘package:Matrix’:

    expand

The following object is masked from ‘package:base’:

    expand.grid

Loading required package: IRanges
Loading required package: GenomicRanges
Loading required package: GenomeInfoDb
Loading required package: SummarizedExperiment
Loading required package: DelayedArray
Loading required package: BiocParallel

Attaching package: ‘DelayedArray’

The following objects are masked from ‘package:matrixStats’:

    colMaxs, colMins, colRanges, rowMaxs, rowMins, rowRanges

The following objects are masked from ‘package:base’:

    aperm, apply

> deseq.obj <- DESeqDataSetFromMatrix(countData = cntsMatrix,
+                                    DataFrame(group),
+                                    ~ group )
converting counts to integer mode
Warning in DESeqDataSet(se, design = design, ignoreRank) :
  some variables in design formula are characters, converting to factors
> DESeq2::sizeFactors(deseq.obj) <- normalizationFactors
> #If using metagenomeSeq
> normalizedObject <- mouseData
> pData(normalizedObject@expSummary$expSummary)$normFactors <- normalizationFactors
> 
> 
> 
> 
> ### * <FOOTER>
> ###
> cleanEx()

detaching ‘package:DESeq2’, ‘package:SummarizedExperiment’,
  ‘package:DelayedArray’, ‘package:BiocParallel’,
  ‘package:GenomicRanges’, ‘package:GenomeInfoDb’, ‘package:IRanges’,
  ‘package:S4Vectors’, ‘package:stats4’, ‘package:edgeR’,
  ‘package:locfit’, ‘package:matrixStats’, ‘package:metagenomeSeq’,
  ‘package:RColorBrewer’, ‘package:glmnet’, ‘package:foreach’,
  ‘package:Matrix’, ‘package:limma’, ‘package:Biobase’,
  ‘package:BiocGenerics’, ‘package:parallel’

> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  17.403 1.511 19.39 0 0 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
